{
  "_args": [
    [
      "copy@https://registry.npmjs.org/copy/-/copy-0.3.1.tgz",
      "/home/daielchom/Documents/Proyectos/daielchom.github.io/documents/node_modules/hackmyresume"
    ]
  ],
  "_from": "copy@>=0.3.1 <0.4.0",
  "_id": "copy@0.3.1",
  "_inCache": true,
  "_location": "/hackmyresume/copy",
  "_phantomChildren": {},
  "_requested": {
    "name": "copy",
    "raw": "copy@https://registry.npmjs.org/copy/-/copy-0.3.1.tgz",
    "rawSpec": "https://registry.npmjs.org/copy/-/copy-0.3.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/copy/-/copy-0.3.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/hackmyresume"
  ],
  "_resolved": "https://registry.npmjs.org/copy/-/copy-0.3.1.tgz",
  "_shasum": "c65a3cda2c434cec21246e1914b6dba97e3364e3",
  "_shrinkwrap": null,
  "_spec": "copy@https://registry.npmjs.org/copy/-/copy-0.3.1.tgz",
  "_where": "/home/daielchom/Documents/Proyectos/daielchom.github.io/documents/node_modules/hackmyresume",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bin": {
    "copy": "bin/cli.js",
    "copy-cli": "bin/cli.js"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/copy/issues"
  },
  "contributors": [
    {
      "name": "Brian Leathem",
      "url": "blog.bleathem.ca"
    },
    {
      "name": "Brian Woodward",
      "url": "https://twitter.com/doowb"
    },
    {
      "name": "gaozhenze",
      "url": "https://github.com/SoulRIver2015"
    },
    {
      "name": "Guilherme Santiago",
      "url": "https://gsantiago.github.io"
    },
    {
      "name": "Joakim Carlstein",
      "url": "http://joakim.beng.se"
    },
    {
      "name": "Jon Schlinkert",
      "url": "http://twitter.com/jonschlinkert"
    }
  ],
  "dependencies": {
    "async-each": "^1.0.0",
    "bluebird": "^3.4.1",
    "extend-shallow": "^2.0.1",
    "file-contents": "^0.3.1",
    "glob-parent": "^2.0.0",
    "graceful-fs": "^4.1.4",
    "has-glob": "^0.1.1",
    "is-absolute": "^0.2.5",
    "lazy-cache": "^2.0.1",
    "log-ok": "^0.1.1",
    "matched": "^0.4.1",
    "mkdirp": "^0.5.1",
    "resolve-dir": "^0.1.0",
    "to-file": "^0.2.0"
  },
  "description": "Copy files or directories using globs.",
  "devDependencies": {
    "assert-fs": "^0.1.0",
    "assert-path": "^0.1.0",
    "delete": "^0.3.2",
    "gulp": "^3.9.1",
    "gulp-format-md": "^0.1.9",
    "gulp-unused": "^0.1.2",
    "is-buffer": "^1.1.3",
    "look-up": "^0.8.3",
    "minimist": "^1.2.0",
    "mocha": "^2.5.3"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "bin",
    "index.js",
    "lib"
  ],
  "homepage": "https://github.com/jonschlinkert/copy",
  "keywords": [
    "async",
    "copy",
    "file",
    "file-system",
    "fs",
    "glob",
    "move",
    "path",
    "pattern",
    "promise",
    "stream",
    "sync",
    "system"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "copy",
  "optionalDependencies": {},
  "readme": "# copy [![NPM version](https://img.shields.io/npm/v/copy.svg?style=flat)](https://www.npmjs.com/package/copy) [![NPM monthly downloads](https://img.shields.io/npm/dm/copy.svg?style=flat)](https://npmjs.org/package/copy)  [![NPM total downloads](https://img.shields.io/npm/dt/copy.svg?style=flat)](https://npmjs.org/package/copy) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/copy.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/copy) [![Windows Build Status](https://img.shields.io/appveyor/ci/jonschlinkert/copy.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/jonschlinkert/copy)\n\n> Copy files or directories using globs.\n\n## Table of Contents\n\n- [Install](#install)\n- [Usage](#usage)\n- [Examples](#examples)\n- [API](#api)\n- [CLI](#cli)\n- [History](#history)\n- [About](#about)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save copy\n```\n\n## Usage\n\n```js\nvar copy = require('copy');\n```\n\nSee the [API documentation](#api) for usage details and available methods.\n\n## Examples\n\nThe main export is a function that takes:\n\n* `src` - glob pattern or file path(s)\n* `dest` - the destination directory\n* `cb` - callback function\n\n```js\ncopy('*.js', 'foo', function(err, files) {\n  if (err) throw err;\n  // `files` is an array of the files that were copied\n});\n```\n\n**Usage with [gulp](http://gulpjs.com)**\n\nIn your project's gulpfile.js:\n\n```js\nvar gulp = require('gulp');\nvar copy = require('copy');\n\ngulp.task('default', function (cb) {\n  copy('fixtures/*.txt', 'actual', cb);\n});\n```\n\n## API\n\n### [copy](index.js#L27)\n\nCopy a filepath, vinyl file, array of files, or glob of files to the given destination `directory`, with `options` and callback function that exposes `err` and the array of vinyl files that are created by the copy operation.\n\n**Params**\n\n* `patterns` **{String|Object|Array}**: Filepath(s), vinyl file(s) or glob of files.\n* `dir` **{String}**: Destination directory\n* `options` **{Object|Function}**: or callback function\n* `cb` **{Function}**: Callback function if no options are specified\n\n**Example**\n\n```js\ncopy('*.js', 'dist', function(err, file) {\n  // exposes the vinyl `file` created when the file is copied\n});\n```\n\n### [.copy.each](index.js#L79)\n\nCopy an array of files to the given destination `directory`, with `options` and callback function that exposes `err` and the array of vinyl files that are created by the copy operation.\n\n**Params**\n\n* `files` **{Array}**: Filepaths or vinyl files.\n* `dir` **{String}**: Destination directory\n* `options` **{Object|Function}**: or callback function\n* `cb` **{Function}**: Callback function if no options are specified\n\n**Example**\n\n```js\ncopy.each(['foo.txt', 'bar.txt', 'baz.txt'], 'dist', function(err, files) {\n  // exposes the vinyl `files` created when the files are copied\n});\n```\n\n### [.copy.one](index.js#L132)\n\nCopy a single `file` to the given `dest` directory, using the specified options and callback function.\n\n**Params**\n\n* `file` **{String|Object}**: Filepath or vinyl file\n* `dir` **{String}**: Destination directory\n* `options` **{Object|Function}**: or callback function\n* `cb` **{Function}**: Callback function if no options are specified\n\n**Example**\n\n```js\ncopy.one('foo.txt', 'dist', function(err, file) {\n  if (err) throw err;\n  // exposes the vinyl `file` that is created when the file is copied\n});\n```\n\n## CLI\n\nTo use the CLI, install `copy` globally with the following command:\n\n```js\n$ npm install --global copy\n```\n\nThis adds `copy` to your system path, allowing the `copy` command to be executed anywhere.\n\n**CLI usage**\n\n```sh\n$ copy <patterns> <dir>\n```\n\n* `patterns`: glob pattern or array of file paths\n* `dir`: destination directory\n\n**Example**\n\nCopy* all files with the `.js` extension to the `foo` directory\n\n```sh\n$ copy *.js foo\n```\n\n*Note that glob patterns may need to be wrapped in quotes depending on the shell you're using.\n\n## History\n\n**v0.2.0 - breaking changes**\n\n* The API was changed in 0.2.0. please review the [API documentation](#api)\n\n## About\n\n### Related projects\n\n* [expand-config](https://www.npmjs.com/package/expand-config): Expand tasks, targets and files in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-config \"Expand tasks, targets and files in a declarative configuration.\")\n* [expand-files](https://www.npmjs.com/package/expand-files): Expand glob patterns in a declarative configuration into src-dest mappings. | [homepage](https://github.com/jonschlinkert/expand-files \"Expand glob patterns in a declarative configuration into src-dest mappings.\")\n* [expand-target](https://www.npmjs.com/package/expand-target): Expand target definitions in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-target \"Expand target definitions in a declarative configuration.\")\n* [expand-task](https://www.npmjs.com/package/expand-task): Expand and normalize task definitions in a declarative configuration. | [homepage](https://github.com/jonschlinkert/expand-task \"Expand and normalize task definitions in a declarative configuration.\")\n* [export-files](https://www.npmjs.com/package/export-files): node.js utility for exporting a directory of files as modules. | [homepage](https://github.com/jonschlinkert/export-files \"node.js utility for exporting a directory of files as modules.\")\n* [write](https://www.npmjs.com/package/write): Write data to a file, replacing the file if it already exists and creating anyâ€¦ [more](https://github.com/jonschlinkert/write) | [homepage](https://github.com/jonschlinkert/write \"Write data to a file, replacing the file if it already exists and creating any intermediate directories if they don't already exist. Thin wrapper around node's native fs methods.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 61 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 2  | [joakimbeng](https://github.com/joakimbeng) |  \n| 1  | [bleathem](https://github.com/bleathem) |  \n| 1  | [doowb](https://github.com/doowb) |  \n| 1  | [gsantiago](https://github.com/gsantiago) |  \n| 1  | [SoulRIver2015](https://github.com/SoulRIver2015) |  \n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright Â© 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on September 01, 2017._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/copy.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "layout": "default",
    "lint": {
      "reflinks": true
    },
    "plugins": [
      "gulp-format-md"
    ],
    "reflinks": [
      "gulp",
      "verb",
      "verb-readme-generator"
    ],
    "related": {
      "list": [
        "expand-config",
        "expand-files",
        "expand-target",
        "expand-task",
        "export-files",
        "write"
      ]
    },
    "run": true,
    "tasks": [
      "readme"
    ],
    "toc": true
  },
  "version": "0.3.1"
}
