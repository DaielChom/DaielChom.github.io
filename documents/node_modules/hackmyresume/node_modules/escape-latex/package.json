{
  "_args": [
    [
      "escape-latex@https://registry.npmjs.org/escape-latex/-/escape-latex-1.0.0.tgz",
      "/home/daielchom/Documents/Proyectos/daielchom.github.io/documents/node_modules/hackmyresume"
    ]
  ],
  "_from": "escape-latex@>=1.0.0 <2.0.0",
  "_id": "escape-latex@1.0.0",
  "_inCache": true,
  "_location": "/hackmyresume/escape-latex",
  "_phantomChildren": {},
  "_requested": {
    "name": "escape-latex",
    "raw": "escape-latex@https://registry.npmjs.org/escape-latex/-/escape-latex-1.0.0.tgz",
    "rawSpec": "https://registry.npmjs.org/escape-latex/-/escape-latex-1.0.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/escape-latex/-/escape-latex-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/hackmyresume"
  ],
  "_resolved": "https://registry.npmjs.org/escape-latex/-/escape-latex-1.0.0.tgz",
  "_shasum": "74b9e94d8c178645704c33791e95a4155b59718f",
  "_shrinkwrap": null,
  "_spec": "escape-latex@https://registry.npmjs.org/escape-latex/-/escape-latex-1.0.0.tgz",
  "_where": "/home/daielchom/Documents/Proyectos/daielchom.github.io/documents/node_modules/hackmyresume",
  "author": {
    "name": "Dang Mai"
  },
  "babel": {
    "presets": [
      [
        "env",
        {
          "targets": {
            "node": "4.0"
          }
        }
      ]
    ]
  },
  "bugs": {
    "url": "https://github.com/dangmai/escape-latex/issues"
  },
  "dependencies": {},
  "description": "Escape LaTeX special characters with Javascript",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "chai": "^4.1.2",
    "eslint": "^4.15.0",
    "eslint-config-google": "^0.9.1",
    "eslint-config-prettier": "^2.9.0",
    "husky": "^0.14.3",
    "lint-staged": "^6.0.0",
    "mocha": "^5.0.0",
    "prettier": "^1.9.2"
  },
  "eslintConfig": {
    "env": {
      "node": "true"
    },
    "extends": [
      "eslint:recommended",
      "google",
      "prettier"
    ],
    "parserOptions": {
      "ecmaVersion": 8
    }
  },
  "files": [
    "dist"
  ],
  "homepage": "https://github.com/dangmai/escape-latex#readme",
  "keywords": [
    "escape",
    "latex"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,json,css,md}": [
      "git add",
      "npm run prettier"
    ]
  },
  "main": "./dist/index.js",
  "name": "escape-latex",
  "optionalDependencies": {},
  "prettier": {
    "trailingComma": "all"
  },
  "readme": "# escape-latex\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/dangmai/escape-latex.svg)](https://greenkeeper.io/)\n\n[![Build Status](https://travis-ci.org/dangmai/escape-latex.png)](https://travis-ci.org/dangmai/escape-latex)\n\nEscape LaTeX special characters with Javascript in NodeJS (>= 4.x) environment.\n\n## Usage\n\n```javascript\nnpm install escape-latex\nvar lescape = require('escape-latex');\nlescape(\"String to be escaped here #yolo\");\n```\n\n## API\n\n```javascript\nlescape((input: String), {\n  preserveFormatting: Boolean,\n  escapeMapFn: Function,\n});\n```\n\nBy default,\n`escape-latex` only escapes characters that would result in malformed LaTeX.\nThese characters include `# $ % & \\ ^ _ { }`.\n\nThis means that the final LaTeX output might not look the same as your input Javascript string.\nFor example, multiple spaces are kept as-is, which may be truncated to 1 space by your LaTeX software.\n\nIf you want the final output string to be as similar to your input Javascript string as possible,\nyou can set the `preserveFormatting` param to `true`, like so:\n\n```javascript\nlescape(\"Hello   World\", { preserveFormatting: true });\n// Hello~~~World\n```\n\nWhich will be converted to three non-breaking spaces by your LaTeX software.\n\nThe list of format characters that are escaped include `space, \\t (tab), – (en-dash), — (em-dash)`.\n\nThere is also the param `escapeMapFn` to modify the mapping of escaped characters,\nso you can add/modify/remove your own escapes if necessary.\n\nIt accepts a callback function that takes in the default character escapes and the formatting escapes as parameters, and returns a complete escape mapping. Here's an example:\n\n```javascript\nlescape(\"Hello   World\", {\n  preseveFormatting: true,\n  escapeMapFn: function(defaultEscapes, formattingEscapes) {\n    formattingEscapes[\" \"] = \"\\\\\\\\\";\n    return Object.assign({}, defaultEscapes, formattingEscapes);\n  },\n});\n// Hello\\\\\\\\\\\\world\n```\n\n## Testing\n\n```\nnpm test\n```\n\n## Notes\n\n* If you are updating from `escape-latex < 1.0.0`,\n  the `en-dash` and `em-dash` are no longer escaped by default.\n  Please use `preserveFormatting` to turn them on if necessary.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dangmai/escape-latex.git"
  },
  "scripts": {
    "build": "babel ./src -d ./dist --ignore index.test.js",
    "clean": "rm -rf dist",
    "init": "mkdir dist",
    "lint": "eslint ./src",
    "postversion": "git push && git push --tags",
    "prebuild": "npm run clean && npm run init",
    "precommit": "npm run lint && lint-staged",
    "prettier": "prettier --write ./src/**/*.js",
    "preversion": "npm test && npm build",
    "test": "mocha --require babel-core/register -u tdd ./src/**/*.test.js"
  },
  "version": "1.0.0"
}
